# Kong nginx.conf

worker_processes  1;

error_log  logs/error.log;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    # Kong
    lua_package_path '/usr/local/share/lua/5.1/?.lua;;';

    # Lua shared dicts
    lua_shared_dict kong             5m;
    lua_shared_dict kong_locks       5m;
    lua_shared_dict kong_process_events 5m;
    lua_shared_dict kong_cluster_events 5m;

    # Nginx internals
    lua_shared_dict nginx_status 1m;

    # Health checks
    lua_shared_dict healthchecks     5m;
    lua_shared_dict healthchecks_lock 1m;

    init_by_lua_block {
        kong = require 'kong'
        kong.init()
    }

    init_worker_by_lua_block {
        kong.init_worker()
    }

    server {
        listen 80 default;
        server_name _;
        client_max_body_size 100m;

        access_log  logs/access.log;

        location / {
            default_type application/json;
            content_by_lua_block {
                kong.serve_request()
            }
        }

        location /nginx_status {
            internal;
            access_log  off;
            content_by_lua_block {
                kong.report_status()
            }
        }
    }

    # Kong Admin API
    server {
        listen 8001;
        server_name _;
        client_max_body_size 100m;

        access_log  logs/access.log;

        location / {
            default_type application/json;
            content_by_lua_block {
                kong.serve_admin_api()
            }
        }
    }
}
user {{ kong_user }};
